// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  name      String
  image     String?
  createdAt DateTime @default(now()) @map("created_at")

  accounts     Accounts[]
  categories   Categories[]
  invoices     Invoices[]
  transactions Transactions[]

  @@map("users")
}

model Accounts {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  title     String
  createdAt DateTime @default(now()) @map("created_at")

  user    Users          @relation(fields: [userId], references: [id])
  inputs  Transactions[] @relation("AccountAsInput")
  outputs Transactions[] @relation("AccountAsOutput")

  @@unique([userId, title])
  @@map("accounts")
}

model Categories {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  title     String
  createdAt DateTime @default(now()) @map("created_at")

  user         Users          @relation(fields: [userId], references: [id])
  transactions Transactions[]

  @@unique([userId, title])
  @@map("categories")
}

model Invoices {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  title     String
  value     Decimal
  isInput   Boolean  @map("is_input")
  isActive  Boolean  @map("is_active")
  dueDay    Int      @map("due_at")
  createdAt DateTime @default(now()) @map("created_at")

  user Users @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("invoices")
}

model Transactions {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  description  String
  transactedAt DateTime @map("transacted_at")
  categoryId   Int      @map("caterogy_id")
  inputId      Int?     @map("input_id")
  outputId     Int?     @map("output_id")
  value        Decimal
  createdAt    DateTime @default(now()) @map("created_at")

  user     Users      @relation(fields: [userId], references: [id])
  category Categories @relation(fields: [categoryId], references: [id])
  input    Accounts?  @relation("AccountAsInput", fields: [inputId], references: [id])
  output   Accounts?  @relation("AccountAsOutput", fields: [outputId], references: [id])

  @@map("transactions")
}
